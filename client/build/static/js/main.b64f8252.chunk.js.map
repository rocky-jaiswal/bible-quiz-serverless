{"version":3,"sources":["components/Note/styles.module.scss","components/LoadingSpinner/styles.module.scss","components/Layout/styles.module.scss","components/Header/styles.module.scss","components/Timerbar/styles.module.scss","components/Options/styles.module.scss","components/Footer/styles.module.scss","components/Question/styles.module.scss","components/Questions/styles.module.scss","containers/Root/styles.module.scss","constants/enums.ts","components/Footer/index.tsx","components/Header/index.tsx","components/Layout/index.tsx","redux/app/index.ts","hooks/useInterval.ts","containers/MainHoc/index.tsx","components/Timerbar/index.tsx","components/Question/index.tsx","components/LoadingSpinner/index.tsx","components/Options/index.tsx","components/Note/index.tsx","components/Questions/index.tsx","api/questions.ts","routes/index.tsx","containers/Root/index.tsx","containers/App/index.tsx","i18n/index.ts","sagas/index.ts","store/index.ts","index.tsx"],"names":["module","exports","LocaleEnum","Footer","props","className","styles","footer","score","correct","incorrect","Header","_props","header","header_content","to","Layout","main_container","switchLocale","page","main","React","toArray","children","initialState","question","currentIndex","currentId","timerActive","note","text","response","id","questionIndex","result","lang","en","appSlice","createSlice","name","reducers","incrementIndex","state","decrementIndex","resetIndex","setResponse","action","payload","selectedOption","actions","useInterval","WrappedComponent","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","Timerbar","useState","width","setWidth","pause","onComplete","timer_bar","timer","style","Question","question_area","questionText","LoadingSpinner","small","spinner_wrapper_small","spinner_wrapper","spinner_small","spinner","Options","selected","setSelected","options_area","options","map","option","disabled","isCheckingResponse","onClick","a","handleSelection","currentQuestionId","RightCheck","svg_image","height","outer_success","ry","rx","cy","cx","fill","y2","x2","y1","x1","Wrong","outer_wrong","transform","Note","note_area","note_wrapper","responseResult","noteText","next_question","changeQuestion","Questions","handleOptionSelect","optionId","questionId","data","questions_container","questions","currentQuestionIndex","length","questionsAPI","createApi","baseQuery","baseUrl","body","request","ClientError","error","status","graphqlBaseQuery","process","reducerPath","endpoints","builder","getQuestions","query","gql","transformResponse","allQuestions","validateResponse","mutation","args","validateAnswer","routes","root","sequence","component","dispatch","useDispatch","useSelector","app","api","useGetQuestionsQuery","errorLoadingQuestions","loadingQuestions","isLoading","useValidateResponseMutation","selectResponse","errorInChecking","container","exact","path","App","locale","messages","setMessages","Promise","resolve","default","importMessages","then","msgs","Object","keys","route","key","sagas","sagaMiddleware","createSagaMiddleware","allSagas","saga","run","store","configureStore","reducer","appReducer","middleware","getDefaultMiddleware","concat","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b64f8252.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"note_area\":\"styles_note_area__9UdUp\",\"next_question\":\"styles_next_question__3Hbad\",\"note_wrapper\":\"styles_note_wrapper__2C9q1\",\"svg_image\":\"styles_svg_image__2fqsI\",\"outer_success\":\"styles_outer_success___y9ll\",\"show100\":\"styles_show100__21Kp_\",\"outer_wrong\":\"styles_outer_wrong__XLSGa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner_wrapper\":\"styles_spinner_wrapper__1kZww\",\"spinner\":\"styles_spinner__3kNkA\",\"rotate-forever\":\"styles_rotate-forever__2eqwq\",\"spinner_wrapper_small\":\"styles_spinner_wrapper_small__1jn-s\",\"spinner_small\":\"styles_spinner_small__1qPNx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_container\":\"styles_main_container__2lY8x\",\"page\":\"styles_page__2lrFz\",\"main\":\"styles_main__S9urJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__2dQfB\",\"header_content\":\"styles_header_content__3o0rK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer_bar\":\"styles_timer_bar__1L_aS\",\"timer\":\"styles_timer__3eBXQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options_area\":\"styles_options_area__5ooLb\",\"option\":\"styles_option__2Xxh1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"styles_footer__2jx7K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"question_area\":\"styles_question_area__QD-w9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"questions_container\":\"styles_questions_container__3QTBM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3kWrL\"};","export enum LocaleEnum {\n  en = 'en',\n  de = 'de'\n}\n","import styles from './styles.module.scss'\n\ninterface Props {\n  score: { correct: number; incorrect: number }\n}\n\nconst Footer = (props: Props) => {\n  return (\n    <div className={styles.footer}>\n      <p>Correct: {props.score.correct}</p>\n      <p>Incorrect: {props.score.incorrect}</p>\n    </div>\n  )\n}\n\nexport default Footer\n","import { Link } from 'react-router-dom'\nimport { LocaleEnum } from '../../constants/enums'\n\nimport styles from './styles.module.scss'\n\ninterface Props {\n  switchLocale(lang: LocaleEnum): unknown\n}\n\nconst Header = (_props: Props) => {\n  return (\n    <div className={styles.header}>\n      <div className={styles.header_content}>\n        <Link to=\"/\">Bible Quiz</Link>\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","import * as React from 'react'\n\nimport { LocaleEnum } from '../../constants/enums'\n\nimport Footer from '../Footer'\nimport Header from '../Header'\n\nimport styles from './styles.module.scss'\n\ninterface Props {\n  switchLocale(lang: LocaleEnum): unknown\n  score: { correct: number; incorrect: number }\n  children?: React.ReactElement<{}>\n}\n\nconst Layout = (props: Props) => {\n  return (\n    <div className={styles.main_container}>\n      <Header switchLocale={props.switchLocale} />\n      <div className={styles.page}>\n        <div className={styles.main}>{React.Children.toArray(props.children)}</div>\n      </div>\n      <Footer score={props.score} />\n    </div>\n  )\n}\n\nexport default Layout\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LocaleEnum } from '../../constants/enums'\nimport { AppState } from '../../constants/types'\n\nconst initialState: AppState = {\n  question: {\n    currentIndex: 0,\n    currentId: null,\n    timerActive: true,\n  },\n  note: {\n    text: null,\n  },\n  response: {\n    id: null,\n    questionIndex: 0,\n    result: 'unselected',\n  },\n  score: {\n    correct: 0,\n    incorrect: 0,\n  },\n  lang: LocaleEnum.en,\n}\n\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState,\n  reducers: {\n    incrementIndex: (state) => {\n      state.question.currentIndex += 1\n      state.response = {\n        id: null,\n        questionIndex: state.question.currentIndex,\n        result: 'unselected',\n      }\n      state.note = {\n        text: null,\n      }\n    },\n    decrementIndex: (state) => {\n      state.question.currentIndex -= 1\n      state.response = {\n        id: null,\n        questionIndex: state.question.currentIndex,\n        result: 'unselected',\n      }\n      state.note = {\n        text: null,\n      }\n    },\n    resetIndex: (state) => {\n      state.question.currentIndex = 0\n      state.response = {\n        id: null,\n        questionIndex: state.question.currentIndex,\n        result: 'unselected',\n      }\n      state.note = {\n        text: null,\n      }\n    },\n    setResponse: (state, action) => {\n      if (action.payload.result) {\n        state.response = {\n          id: action.payload.selectedOption,\n          questionIndex: state.question.currentIndex,\n          result: action.payload.result.correct ? 'correct' : 'wrong',\n        }\n        state.note = {\n          text: action.payload.result.note,\n        }\n        state.score = {\n          correct: action.payload.result.correct ? state.score.correct + 1 : state.score.correct,\n          incorrect: !action.payload.result.correct ? state.score.incorrect + 1 : state.score.incorrect,\n        }\n      }\n    },\n    switchLocale: (state, action: PayloadAction<LocaleEnum>) => {\n      state.lang = action.payload\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { incrementIndex, decrementIndex, resetIndex, setResponse, switchLocale } = appSlice.actions\nexport default appSlice.reducer\n","import { useEffect, useRef } from 'react'\n\nfunction useInterval(callback: any, delay: number) {\n  const savedCallback = useRef<any>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    let id = setInterval(tick, delay);\n    return () => clearInterval(id);\n\n  }, [delay]);\n}\n\nexport default useInterval\n","import { useDispatch, useSelector } from 'react-redux'\n\nimport Layout from '../../components/Layout'\nimport { RootState } from '../../store'\nimport { LocaleEnum } from '../../constants/enums'\n\nimport { switchLocale } from '../../redux/app'\n\nexport const withLayout = (WrappedComponent: () => JSX.Element) => {\n  const MainHoc = () => {\n    const dispatch = useDispatch()\n\n    const score = useSelector((state: RootState) => state.app.score)\n\n    return (\n      <Layout switchLocale={(payload: LocaleEnum) => dispatch(switchLocale(payload))} score={score}>\n        <WrappedComponent />\n      </Layout>\n    )\n  }\n\n  return MainHoc\n}\n","import { useState } from 'react'\n\nimport useInterval from '../../hooks/useInterval'\nimport styles from './styles.module.scss'\n\ninterface Props {\n  pause: boolean\n  onComplete: (selectedOption: number) => any\n}\n\nconst LOAD_TIME = 15\nconst REFRESH_TIME = 20\nconst WIDTH_INCREASE = 100 / ((LOAD_TIME * 1000) / REFRESH_TIME)\n\nconst Timerbar = (props: Props) => {\n  let [width, setWidth] = useState(0)\n\n  useInterval(() => {\n    if (!props.pause) {\n      if (width < 100) {\n        setWidth(width + WIDTH_INCREASE)\n      } else {\n        setWidth(0)\n        props.onComplete(99)\n      }\n    } else {\n      setWidth(0)\n    }\n  }, REFRESH_TIME)\n\n  return (\n    <div className={styles.timer_bar}>\n      <div className={styles.timer} style={{ width: `${width}%` }} />\n    </div>\n  )\n}\n\nexport default Timerbar\n","import styles from './styles.module.scss'\n\ninterface Props {\n  questionText: string\n}\n\nconst Question = (props: Props) => {\n  return (\n    <div className={styles.question_area}>\n      <p>{props.questionText}</p>\n    </div>\n  )\n}\n\nexport default Question\n","import styles from './styles.module.scss'\n\ninterface Props {\n  small?: boolean\n}\n\nconst LoadingSpinner = (props: Props) => {\n  return (\n    <div className={props.small ? styles.spinner_wrapper_small : styles.spinner_wrapper}>\n      <div className={props.small ? styles.spinner_small : styles.spinner} />\n    </div>\n  )\n}\n\nexport default LoadingSpinner\n","import { useState } from 'react'\n\nimport { OptionType } from '../../constants/types'\nimport LoadingSpinner from '../LoadingSpinner'\n\nimport styles from './styles.module.scss'\n\ninterface Props {\n  currentQuestionIndex: number\n  currentQuestionId: string\n  options: OptionType[]\n  isCheckingResponse: boolean\n  handleSelection: (selectedOption: number) => any\n}\n\nconst Options = (props: Props) => {\n  let [selected, setSelected] = useState<number | null>(null)\n\n  return (\n    <div className={styles.options_area}>\n      {props.options.map((option: OptionType) => {\n        return (\n          <div className={styles.option} key={`${props.currentQuestionId}-${option.id}`}>\n            <button\n              disabled={props.isCheckingResponse}\n              onClick={async () => {\n                setSelected(option.id)\n                props.handleSelection(option.id)\n              }}\n            >\n              {props.isCheckingResponse && selected === option.id ? (\n                <LoadingSpinner small={true} />\n              ) : (\n                <span>{option.id}</span>\n              )}\n            </button>\n            <span>{option.text}</span>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Options\n","import styles from './styles.module.scss'\n\ninterface Props {\n  noteText: string\n  responseResult: string\n  changeQuestion: () => void\n}\n\nconst RightCheck = () => {\n  return (\n    <div className={styles.svg_image}>\n      <svg width=\"200\" height=\"200\">\n        <g>\n          <ellipse className={styles.outer_success} ry=\"81.75\" rx=\"78.5\" id=\"svg_1\" cy=\"99.75\" cx=\"101.5\" fill=\"none\" />\n          <line y2=\"144.5\" x2=\"58\" y1=\"109\" x1=\"37\" className={styles.outer_success} />\n          <line y2=\"71.62385\" x2=\"164.16489\" y1=\"143\" x1=\"51.7\" className={styles.outer_success} />\n        </g>\n      </svg>\n    </div>\n  )\n}\n\nconst Wrong = () => {\n  return (\n    <div className={styles.svg_image}>\n      <svg width=\"200\" height=\"200\">\n        <g>\n          <ellipse className={styles.outer_wrong} ry=\"81.75\" rx=\"78.5\" id=\"svg_1\" cy=\"99.75\" cx=\"101.5\" fill=\"none\" />\n          <line y2=\"150\" x2=\"144\" y1=\"50\" x1=\"55\" className={styles.outer_wrong} />\n          <line transform=\"rotate(82 105 100)\" y2=\"155\" x2=\"144\" y1=\"60\" x1=\"55\" className={styles.outer_wrong} />\n        </g>\n      </svg>\n    </div>\n  )\n}\n\nconst Note = (props: Props) => {\n  return (\n    <div className={styles.note_area}>\n      <div className={styles.note_wrapper}>\n        {props.responseResult === 'correct' ? <RightCheck /> : <Wrong />}\n        <p>{props.noteText}</p>\n        <button className={styles.next_question} onClick={() => props.changeQuestion()}>\n          <span>Next Question</span>\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Note\n","// import styles from './styles.module.scss'\n\nimport Timerbar from '../Timerbar'\nimport Question from '../Question'\nimport Options from '../Options'\nimport Note from '../Note'\n\nimport { QuestionType } from '../../constants/types'\n\nimport styles from './styles.module.scss'\n\ninterface Props {\n  questions: QuestionType[]\n  currentQuestionIndex: number\n  currentQuestionId: string\n  isCheckingResponse: boolean\n  noteText: string | null\n  responseResult: string\n  incrementIndex: () => void\n  resetIndex: () => void\n  setResponse: (payload: unknown) => void\n  handleSelection: ({ questionId, selectedOption }: { questionId: string; selectedOption: number }) => any\n}\n\nconst Questions = (props: Props) => {\n  const changeQuestion = () => {\n    if (props.currentQuestionIndex < props.questions.length - 1) {\n      props.incrementIndex()\n    } else {\n      props.resetIndex()\n    }\n  }\n\n  const handleOptionSelect = async (optionId: number) => {\n    const result = await props.handleSelection({\n      selectedOption: optionId,\n      questionId: props.currentQuestionId,\n    })\n    props.setResponse({ result: result.data, selectedOption: optionId })\n  }\n\n  return (\n    <div className={styles.questions_container}>\n      <Timerbar pause={props.isCheckingResponse} onComplete={handleOptionSelect} />\n      <Question questionText={props.questions[props.currentQuestionIndex].question} />\n      {props.responseResult !== 'unselected' ? (\n        <Note noteText={props.noteText || ''} responseResult={props.responseResult} changeQuestion={changeQuestion} />\n      ) : (\n        <Options\n          options={props.questions[props.currentQuestionIndex].options}\n          currentQuestionIndex={props.currentQuestionIndex}\n          currentQuestionId={props.currentQuestionId}\n          isCheckingResponse={props.isCheckingResponse}\n          handleSelection={handleOptionSelect}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default Questions\n","import { request, gql, ClientError } from 'graphql-request'\nimport { createApi } from '@reduxjs/toolkit/query/react'\n\nconst graphqlBaseQuery =\n  ({ baseUrl }: { baseUrl: string }) =>\n  async ({ body }: { body: string }) => {\n    try {\n      const result = await request(baseUrl, body)\n      return { data: result }\n    } catch (error) {\n      if (error instanceof ClientError) {\n        return { error: { status: error.response.status, data: error } }\n      }\n      return { error: { status: 500, data: error } }\n    }\n  }\n\nconst questionsAPI = createApi({\n  baseQuery: graphqlBaseQuery({\n    baseUrl: process.env.REACT_APP_BASE_URL || '',\n  }),\n  reducerPath: 'questionsAPI',\n  endpoints: (builder) => ({\n    getQuestions: builder.query({\n      query: () => ({\n        body: gql`\n          query {\n            allQuestions {\n              id\n              question\n              type\n              options {\n                id\n                text\n              }\n            }\n          }\n        `,\n      }),\n      transformResponse: (response) => response.allQuestions,\n    }),\n    validateResponse: builder.mutation({\n      query: (args: any) => ({\n        body: gql`\n          query {\n            validateAnswer(questionId: \"${args.questionId}\", selectedOption: ${args.selectedOption}) {\n              note\n              correct\n            }\n          }\n        `,\n      }),\n      transformResponse: (response) => response.validateAnswer,\n    }),\n  }),\n})\n\nexport default questionsAPI\n","import Root from '../containers/Root'\n\ninterface RouteDefinition {\n  sequence: number\n  exact: boolean\n  path: string\n  component: () => JSX.Element\n}\n\ninterface Routes {\n  [propName: string]: RouteDefinition\n}\n\nconst routes: Routes = {\n  root: {\n    sequence: 1,\n    component: Root,\n    exact: true,\n    path: '/',\n  }\n}\n\nexport default routes\n","import { useSelector, useDispatch } from 'react-redux'\n\nimport { withLayout } from '../MainHoc'\n\nimport { RootState } from '../../store'\nimport { resetIndex, incrementIndex, setResponse } from '../../redux/app'\n\nimport Questions from '../../components/Questions'\nimport LoadingSpinner from '../../components/LoadingSpinner'\n\nimport api from '../../api/questions'\nimport styles from './styles.module.scss'\n\nconst Root = () => {\n  const dispatch = useDispatch()\n\n  const currentQuestionIndex = useSelector((state: RootState) => state.app.question.currentIndex)\n  const noteText = useSelector((state: RootState) => state.app.note.text)\n  const responseResult = useSelector((state: RootState) => state.app.response.result)\n\n  const { data: questions, error: errorLoadingQuestions, isLoading: loadingQuestions } = api.useGetQuestionsQuery(null)\n  const [selectResponse, { isLoading: isCheckingResponse, error: errorInChecking }] = api.useValidateResponseMutation()\n\n  if (errorLoadingQuestions || errorInChecking) {\n    return <div>Error! Please try again later.</div>\n  }\n\n  if (loadingQuestions) {\n    return <LoadingSpinner />\n  }\n\n  return (\n    <div className={styles.container}>\n      <Questions\n        questions={questions}\n        currentQuestionIndex={currentQuestionIndex}\n        currentQuestionId={questions[currentQuestionIndex].id}\n        isCheckingResponse={isCheckingResponse || noteText !== null}\n        noteText={noteText}\n        responseResult={responseResult}\n        incrementIndex={() => dispatch(incrementIndex())}\n        resetIndex={() => dispatch(resetIndex())}\n        setResponse={(payload: unknown) => dispatch(setResponse(payload))}\n        handleSelection={selectResponse}\n      />\n    </div>\n  )\n}\n\nexport default withLayout(Root)\n","import * as React from 'react'\nimport { IntlProvider } from 'react-intl'\nimport { Route, Switch } from 'react-router'\nimport { BrowserRouter } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nimport { RootState } from '../../store'\nimport { importMessages } from '../../i18n'\n\nimport en from '../../i18n/en.json' // default to english\nimport routes from '../../routes'\n\nconst App = () => {\n  const locale = useSelector((state: RootState) => state.app.lang)\n\n  const [messages, setMessages] = React.useState(en)\n  React.useEffect(() => {\n    importMessages(locale).then((msgs) => setMessages(msgs.default))\n  }, [locale])\n\n  return (\n    <IntlProvider locale={locale} messages={messages}>\n      <BrowserRouter>\n        <Switch>\n          {Object.keys(routes).map((route) => {\n            return <Route {...routes[route]} key={routes[route].sequence} />\n          })}\n        </Switch>\n      </BrowserRouter>\n    </IntlProvider>\n  )\n}\n\nexport default App\n","import { useIntl } from 'react-intl'\n\nimport en from './en.json'\nimport { LocaleEnum } from '../constants/enums'\n\nexport type LocaleMessages = typeof en\nexport type LocaleKey = keyof LocaleMessages\n\nexport function useFormatMessage(): (id: LocaleKey) => string {\n  const intl = useIntl()\n  return (id) => intl.formatMessage({ id })\n}\n\nexport function importMessages(locale: LocaleEnum) {\n  switch (locale) {\n    case 'en':\n      return import('./en.json')\n    case 'de':\n      return import('./de.json')\n    default:\n      return Promise.resolve({ default: en })\n  }\n}\n","const sagas: any[] = []\n\nexport default sagas\n","import { configureStore } from '@reduxjs/toolkit'\nimport createSagaMiddleware from 'redux-saga'\n\nimport questionsAPI from '../api/questions'\nimport appReducer from '../redux/app'\nimport allSagas from '../sagas'\n\nconst sagaMiddleware = createSagaMiddleware()\nallSagas.map((saga) => sagaMiddleware.run(saga))\n\nexport const store = configureStore({\n  reducer: {\n    app: appReducer,\n    [questionsAPI.reducerPath]: questionsAPI.reducer,\n  },\n  middleware: (getDefaultMiddleware: any) =>\n    getDefaultMiddleware().concat(sagaMiddleware).concat(questionsAPI.middleware),\n})\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\n// export type AppDispatch = typeof store.dispatch\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport App from './containers/App'\nimport { store } from './store'\n// import * as serviceWorker from './serviceWorker'\n\nimport 'normalize.css'\nimport './styles/main.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root') as HTMLElement\n)\n\n// serviceWorker.register()\n"],"sourceRoot":""}